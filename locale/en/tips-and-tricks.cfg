[tips-and-tricks-font-setup]
TCS-header=[color=255,230,192][font=heading-2]__1__[/font][/color]\n
TCS-paragraph=\n\n__1__

[tips-and-tricks-item-description]
traindepot-1-h=Usability
traindepot-1-1=[entity=traindepot] is used to store freshly made trains. Of course you can also send other trains that are out of use to these stations. When you are in need of more trains, you can take them from the depot and put them to use. You can even do this from the mapview without needing to be close to the depot!
traindepot-2-h=Depot statistics
traindepot-2-1=When you open the [entity=traindepot] (__CONTROL__open-gui__), you can see some basic information about the depot.
traindepot-2-2=[font=default-semibold]Depot name:[/font] The name of this depot. By pressing the edit button or switching tabs, you can change the depot name to anything you want, similar to how you change the name of a train stop. Of course you can also use the copy/paste tool for renaming purposes.
traindepot-2-3=[font=default-semibold]Available depot spots:[/font] The amount of depot spots that are available. This is shown as "available/total" station count. Building more stations with the same name extends the total amount of trains that stay in the depot.
traindepot-3-h=Depot configuration settings
traindepot-3-1=[font=default-semibold]Requested amount:[/font] In the depot menu, you can set the amount of trains you want to have in the depot. When the amount of trains that is present in the depot is lower than the requested amount, the connected builders will create more trains until the request is fullfilled.
traindepot-3-2=[font=default-semibold]Connected trainbuilders:[/font] The trainbuilders that are connected to this depot to fulfill the requests. This also shows a list of all the controllers which you can access from here.

trainassembly-1-h=Functionality
trainassembly-1-1=The [entity=trainassembly-machine] will assemble the trainparts to functional train wagons and locomotives. You put the ingredients inside the building like you do for an assembling machine. After that, it will start producing finished trains. However, without a traincontroller attached, it will not place the train on the track.
trainassembly-2-h=Building requirements
trainassembly-2-1=[img=utility/warning_icon] You cannot place trains everywhere, they must be placed on rails. This means the building must also be placed on (straight) rails. This way, the building will assemble the trains onto the tracks directly.
trainassembly-2-2=[img=trainConstructionSite-help-content-icon1] Locomotives and wagons are 6 tiles wide each, with one tile between them. The building is also 6 tiles wide. In order to construct a complete train, you must link multiple __ITEM__trainassembly__s together by placing the buildings one tile apart from each other.
trainassembly-2-3=[img=utility/electricity_icon_unplugged] Assembling a train requires heavy duty tools, so you must provide some power to the buildings. They are quite power hungry, but they support [img=item/effectivity-module-3] __ITEM__effectivity-module__s to be put inside. Because of safety reasons, we cannot allow __ITEM__speed-module__s, and obviously, __ITEM__productivity-module__s make no sense at all.
trainassembly-3-h=Recipe requirements
trainassembly-3-1=[img=utility/no_building_material_icon] Each train requires parts to be build. These parts can be made separately with the same ingredients as you would make a train without this mod present.
trainassembly-3-2=[img=trainConstructionSite-help-content-icon2] The train needs to be able to drive away, which means the locomotives require fuel. As we did not want to limit your fuel options, we chose to make a generic fuel item [item=trainassembly-recipefuel] that can be made out of (most) other fueling items.
trainassembly-3-3=[img=utility/not_enough_repair_packs_icon] The __ITEM__trainassembly__ has a blue arrow, showing the direction of the building. This is useful when building train wagons where the orientation matters (for example the __ENTITY__locomotive__ or __ENTITY__artillery-wagon__).
trainassembly-3-4=In the picture above, the __ITEM__trainassembly__ will create a train (left to right) that is made of:\n - [img=entity/locomotive] __ENTITY__locomotive__ facing west\n - [img=entity/cargo-wagon] __ENTITY__cargo-wagon__ facing west (direction does not matter)\n - [img=entity/cargo-wagon] __ENTITY__cargo-wagon__ facing east\n - [img=entity/locomotive] __ENTITY__locomotive__ facing east\nFor those that like to express train configurations as numbers, this would be a 1-2-1 train (1 locomotive facing the front, 2 wagons, 1 locomotive facing the rear).
